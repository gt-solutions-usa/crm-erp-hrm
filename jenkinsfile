pipeline {
    agent any


    environment {
        CONTAINER_NAME = 'my-container'  // Replace with your container name
        IMAGE_NAME = 'my-image:latest'  // Replace with your Docker image name
    }

    stages {
        stage('Delete Existing Container') {
            steps {
                script {
                    // Check if the container is running and stop and remove it
                    def containerExists = sh(script: "docker ps -a -q -f name=${CONTAINER_NAME}", returnStdout: true).trim()
                    if (containerExists) {
                        echo "Deleting existing container ${CONTAINER_NAME}"
                        sh "docker rm -f ${CONTAINER_NAME}"
                    } else {
                        echo "No existing container ${CONTAINER_NAME} found."
                    }
                }
            }
        }

        stage('Build and Deploy with Docker Compose') {
            steps {
                script {
                    echo "Building and starting services with Docker Compose"
                    sh 'docker-compose up -d --build'  // Ensures the image is rebuilt if necessary
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline completed.'
        }
    }
}
